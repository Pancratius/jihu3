package com.yqbing.servicebing.service.impl;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import net.sf.json.JSONObject;

import org.springframework.stereotype.Service;

import com.yqbing.servicebing.common.ErrorCodeEnum;
import com.yqbing.servicebing.repository.jihuc.StoreInfoBean;
import com.yqbing.servicebing.repository.jihuc.StoreInfoBeanMapper;
import com.yqbing.servicebing.repository.jihuc.StoreUserBean;
import com.yqbing.servicebing.repository.jihuc.StoreUserBeanMapper;
import com.yqbing.servicebing.repository.jihuc.UserExtBean;
import com.yqbing.servicebing.repository.jihuc.UserExtBeanMapper;
import com.yqbing.servicebing.repository.redis.RStoreInfoData;
import com.yqbing.servicebing.service.StoreInfoService;
import com.yqbing.servicebing.utils.NotifyUtil;


@Service("storeInfoService")
@SuppressWarnings("all")
public class StoreInfoServiceImpl implements StoreInfoService{
   
	 @Resource
     private StoreInfoBeanMapper  storeInfoBeanMapper = null;
	 @Resource
	 private StoreUserBeanMapper  storeUserBeanMapper = null;
	
	 @Resource
	 private RStoreInfoData  rStoreInfoData = null;
	 @Resource
	 private UserExtBeanMapper  userExtBeanMapper = null;
	 
	
	@Override
	public String queryInvite(String invite) {
		
		    Map<String,Object> map = new HashMap<String,Object>();
		    StoreInfoBean info = rStoreInfoData.getStoreInfo(invite);
	        if(info != null){
	        	
	        	map.put("storeInfo",info);
	        	return NotifyUtil.success(map);
	        }
	        UserExtBean user = userExtBeanMapper.queryInvite(invite);
		    
		    if(user == null){
			return NotifyUtil.error(ErrorCodeEnum.OBJECT, "用户不存在");
		    }
			StoreUserBean storeuser= storeUserBeanMapper.selectByUserId(Integer.valueOf(user.getId()+""));//返回店铺storeuser
			if(storeuser == null){
				return NotifyUtil.error(ErrorCodeEnum.OBJECT, "用户店铺关系不存在");
			}
			StoreInfoBean storeInfoBean  = storeInfoBeanMapper.selectByPrimaryKey(storeuser.getStoreId());//通过店铺ID发货店铺信息
			if(storeInfoBean == null){
				return NotifyUtil.error(ErrorCodeEnum.OBJECT, "店铺不存在");
			}
			rStoreInfoData.setStoreInfo(invite, storeInfoBean);
		
			map.put("storeInfo",storeInfoBean);
		 
		
		    return NotifyUtil.success(map);
		
	}

}
