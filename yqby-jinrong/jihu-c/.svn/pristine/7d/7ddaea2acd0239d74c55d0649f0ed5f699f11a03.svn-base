<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yqbing.servicebing.repository.database.dao.StoreHouseMapper" >
  <resultMap id="BaseResultMap" type="com.yqbing.servicebing.repository.database.abstracts.StoreHouseAbs" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="app_Name" property="appName" jdbcType="VARCHAR" />
    <result column="app_Size" property="appSize" jdbcType="VARCHAR" />
     <result column="app_size_Long" property="appSizeLong" jdbcType="DOUBLE" />
    <result column="app_Version" property="appVersion" jdbcType="VARCHAR" />
    <result column="down_Times" property="downTimes" jdbcType="VARCHAR" />
    <result column="app_Url_Img" property="appUrlImg" jdbcType="VARCHAR" />
    <result column="app_Url" property="appUrl" jdbcType="VARCHAR" />
    <result column="app_details_png" property="appDetailsPng" jdbcType="VARCHAR" />
    <result column="app_pack" property="appPack" jdbcType="VARCHAR" />
    <result column="app_Type" property="appType" jdbcType="SMALLINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yqbing.servicebing.repository.database.abstracts.StoreHouseAbs" extends="BaseResultMap" >
    <result column="app_Desc" property="appDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, app_Name,app_size_Long, app_Size, app_Version, down_Times, app_Url_Img, app_Url, app_Type, 
    create_time, update_time,app_details_png,app_pack
  </sql>
  <sql id="Blob_Column_List" >
    app_Desc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yqbing.servicebing.repository.database.dao.StoreHouseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yqbing.servicebing.repository.database.dao.StoreHouseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from store_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit 0 ,50
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_house
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPack" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_house
    where app_pack = #{appPack,jdbcType=INTEGER}
  </select>
  <select id="getByAppName" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_house
    where app_Name = #{appName,jdbcType=INTEGER}
  </select>
  <select id="getByAppPack" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_house
    where app_pack = #{appPack,jdbcType=INTEGER}
  </select>
  <select id="queryByType" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_house
    where app_Type = #{type1,jdbcType=INTEGER}
    <choose>
	<when test="startIndex != null">
		limit #{startIndex}
	</when>
	<otherwise>
		limit 0
	</otherwise>
    </choose>
     <choose>
	<when test="pageSize != null">
		, #{pageSize}
	</when>
	<otherwise>
		, 10000
	</otherwise>
    </choose>
    
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from store_house
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yqbing.servicebing.repository.database.abstracts.StoreHouseAbs" useGeneratedKeys="true" keyProperty="id">
    insert into store_house (id, app_Name, app_size_Long,app_Size, 
      app_Version, down_Times, app_Url_Img, 
      app_Url, app_Type, create_time, 
      update_time, app_Desc,app_details_png,app_pack)
    values (#{id,jdbcType=INTEGER}, #{appName,jdbcType=VARCHAR},#{appSizeLong,jdbcType=DOUBLE},  #{appSize,jdbcType=VARCHAR}, 
      #{appVersion,jdbcType=VARCHAR}, #{downTimes,jdbcType=VARCHAR}, #{appUrlImg,jdbcType=VARCHAR}, 
      #{appUrl,jdbcType=VARCHAR}, #{appType,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{appDesc,jdbcType=LONGVARCHAR},#{appDetailsPng,jdbcType=LONGVARCHAR},#{appPack,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yqbing.servicebing.repository.database.abstracts.StoreHouseAbs" useGeneratedKeys="true" keyProperty="id">
    insert into store_house
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="appName != null" >
        app_Name,
      </if>
      <if test="appSizeLong != null" >
        app_size_Long,
      </if>
      <if test="appSize != null" >
        app_Size,
      </if>
      <if test="appVersion != null" >
        app_Version,
      </if>
      <if test="downTimes != null" >
        down_Times,
      </if>
      <if test="appUrlImg != null" >
        app_Url_Img,
      </if>
      <if test="appUrl != null" >
        app_Url,
      </if>
      <if test="appType != null" >
        app_Type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="appDesc != null" >
        app_Desc,
      </if>
      <if test="appDetailsPng != null" >
        app_details_png,
      </if>
      <if test="appPack != null" >
        app_pack,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="appName != null" >
        #{appName,jdbcType=VARCHAR},
      </if>
       <if test="appSizeLong != null" >
         #{appSizeLong,jdbcType=DOUBLE},
      </if>
      <if test="appSize != null" >
        #{appSize,jdbcType=VARCHAR},
      </if>
      <if test="appVersion != null" >
        #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="downTimes != null" >
        #{downTimes,jdbcType=VARCHAR},
      </if>
      <if test="appUrlImg != null" >
        #{appUrlImg,jdbcType=VARCHAR},
      </if>
      <if test="appUrl != null" >
        #{appUrl,jdbcType=VARCHAR},
      </if>
      <if test="appType != null" >
        #{appType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appDesc != null" >
        #{appDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="appDetailsPng != null" >
        #{appDetailsPng,jdbcType=LONGVARCHAR},
      </if>
      <if test="appPack != null" >
        #{appPack,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yqbing.servicebing.repository.database.dao.StoreHouseExample" resultType="java.lang.Integer" >
    select count(*) from store_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.yqbing.servicebing.repository.database.abstracts.StoreHouseAbs" >
    update store_house
    <set >
      <if test="appName != null" >
        app_Name = #{appName,jdbcType=VARCHAR},
      </if>
       <if test="appSizeLong != null" >
       app_size_Long =  #{appSizeLong,jdbcType=DOUBLE},
      </if>
      <if test="appSize != null" >
        app_Size = #{appSize,jdbcType=VARCHAR},
      </if>
      <if test="appVersion != null" >
        app_Version = #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="downTimes != null" >
        down_Times = #{downTimes,jdbcType=VARCHAR},
      </if>
      <if test="appUrlImg != null" >
        app_Url_Img = #{appUrlImg,jdbcType=VARCHAR},
      </if>
      <if test="appUrl != null" >
        app_Url = #{appUrl,jdbcType=VARCHAR},
      </if>
      <if test="appType != null" >
        app_Type = #{appType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appDesc != null" >
        app_Desc = #{appDesc,jdbcType=LONGVARCHAR},
      </if>
       <if test="appDetailsPng != null" >
        app_details_png = #{appDetailsPng,jdbcType=LONGVARCHAR} ,
      </if>
       <if test="app_pack != null" >
        app_pack = #{appPack,jdbcType=LONGVARCHAR} ,
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yqbing.servicebing.repository.database.abstracts.StoreHouseAbs" >
    update store_house
    set app_Name = #{appName,jdbcType=VARCHAR},
      app_size_Long = #{appSizeLong,jdbcType=VARCHAR},
      app_Size = #{appSize,jdbcType=VARCHAR},
      app_Version = #{appVersion,jdbcType=VARCHAR},
      down_Times = #{downTimes,jdbcType=VARCHAR},
      app_Url_Img = #{appUrlImg,jdbcType=VARCHAR},
      app_Url = #{appUrl,jdbcType=VARCHAR},
      app_Type = #{appType,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      app_Desc = #{appDesc,jdbcType=LONGVARCHAR},
      appDetailsPng = #{appDetailsPng,jdbcType=LONGVARCHAR},
      appPack = #{appPack,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yqbing.servicebing.repository.database.abstracts.StoreHouseAbs" >
    update store_house
    set app_Name = #{appName,jdbcType=VARCHAR},
      app_size_Long = #{appSizeLong,jdbcType=VARCHAR},
      app_Size = #{appSize,jdbcType=VARCHAR},
      app_Version = #{appVersion,jdbcType=VARCHAR},
      down_Times = #{downTimes,jdbcType=VARCHAR},
      app_Url_Img = #{appUrlImg,jdbcType=VARCHAR},
      app_Url = #{appUrl,jdbcType=VARCHAR},
      app_Type = #{appType,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>