<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yqbing.servicebing.repository.database.dao.UserExtMapper" >
  <resultMap id="BaseResultMap" type="com.yqbing.servicebing.repository.database.bean.UserExt" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="ali_account" property="aliAccount" jdbcType="VARCHAR" />
    <result column="ali_name" property="aliName" jdbcType="VARCHAR" />
    <result column="payPwd" property="paypwd" jdbcType="VARCHAR" />
    <result column="idCard" property="idcard" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, ali_account, ali_name, payPwd, idCard, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yqbing.servicebing.repository.database.dao.UserExtExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user_ext
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_ext
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_ext
    where user_id = #{uid,jdbcType=BIGINT} 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_ext
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yqbing.servicebing.repository.database.bean.UserExt" >
      insert into user_ext (id, user_id, ali_account, 
      ali_name, payPwd, idCard, 
      create_time)
      values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{aliAccount,jdbcType=VARCHAR}, 
      #{aliName,jdbcType=VARCHAR}, #{paypwd,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yqbing.servicebing.repository.database.bean.UserExt" >
    insert into user_ext
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="aliAccount != null" >
        ali_account,
      </if>
      <if test="aliName != null" >
        ali_name,
      </if>
      <if test="paypwd != null" >
        payPwd,
      </if>
      <if test="idcard != null" >
        idCard,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="aliAccount != null" >
        #{aliAccount,jdbcType=VARCHAR},
      </if>
      <if test="aliName != null" >
        #{aliName,jdbcType=VARCHAR},
      </if>
      <if test="paypwd != null" >
        #{paypwd,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yqbing.servicebing.repository.database.dao.UserExtExample" resultType="java.lang.Integer" >
    select count(*) from user_ext
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.yqbing.servicebing.repository.database.bean.UserExt" >
    update user_ext
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="aliAccount != null" >
        ali_account = #{aliAccount,jdbcType=VARCHAR},
      </if>
      <if test="aliName != null" >
        ali_name = #{aliName,jdbcType=VARCHAR},
      </if>
      <if test="paypwd != null" >
        payPwd = #{paypwd,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idCard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yqbing.servicebing.repository.database.bean.UserExt" >
    update user_ext
    set user_id = #{userId,jdbcType=BIGINT},
      ali_account = #{aliAccount,jdbcType=VARCHAR},
      ali_name = #{aliName,jdbcType=VARCHAR},
      payPwd = #{paypwd,jdbcType=VARCHAR},
      idCard = #{idcard,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>