package com.yqbing.servicebing.webapp.controller.wx;

import java.io.BufferedOutputStream;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.parsers.ParserConfigurationException;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.xml.sax.SAXException;

import com.alibaba.fastjson.JSON;
import com.yqbing.servicebing.repository.database.bean.TWxNoticeBean;
import com.yqbing.servicebing.service.IPublicPayService;
import com.yqbing.servicebing.webapp.wxpay.util.MapUtils;
import com.yqbing.servicebing.webapp.wxpay.util.XmlUtil;

/**
 * 微信支付 异步通知
 * 
 * @author mapb
 *
 */
@Controller
public class NotifyController {


	private static Logger logger = LoggerFactory.getLogger(NotifyController.class);
    @Resource
	IPublicPayService publicPayService;
    /**
	 * 支付成功回调映射
	 * 
	 * @throws SAXException
	 * @throws IOException
	 * @throws ParserConfigurationException
	 */
	@RequestMapping("/weixin/pay/pay_notify")
	public void payNotify(HttpServletRequest request, HttpServletResponse response) throws Exception {
		logger.error("-------------微信支付回调数据开始--------------");
		String inputLine;
		String notityXml = "";
		String resXml = "";
		try {
			while ((inputLine = request.getReader().readLine()) != null) {
				notityXml += inputLine;
			}
			request.getReader().close();
		} catch (Exception e) {
			logger.error("接受支付回调失败-----------");
			logger.error(e.getMessage());
		}
		logger.debug("[接收到的报文]：" + JSON.toJSONString(notityXml));
		// 处理回调参数
		Map<String, String> map = notifyProcess(notityXml);
		String code = map.get("code");
		String msg = map.get("msg").toUpperCase();
		logger.error("code:" + code + " msg:" + msg);
		if ("0".equals(code) && "OK".equals(msg)) {
			resXml = "<xml>" + "<return_code><![CDATA[SUCCESS]]></return_code>"
					+ "<return_msg><![CDATA[OK]]></return_msg>" + "</xml> ";
		} else {
			resXml = "<xml>" + "<return_code><![CDATA[FAIL]]></return_code>"
					+ "<return_msg><![CDATA[报文为空]]></return_msg>" + "</xml> ";
		}
		logger.debug("微信支付回调数据结束----------");
		BufferedOutputStream out = new BufferedOutputStream(response.getOutputStream());
		out.write(resXml.getBytes());
		out.flush();
		out.close();
	}

	/**
	 * 保存微信异步通知消息
	 * 
	 * @param notityXml
	 *            微信异步通知消息
	 * @return
	 * @throws Exception
	 */
	public Map<String, String> notifyProcess(String notityXml) throws Exception {
		Map<String, String> resultMap = new HashMap<>();
		String code = "";
		String msg = "";
		/** 公众号appid **/
		String appid = "";
		/** 商户ID **/
		String mch_id = "";
		/** 设备号 **/
		String device_info = "";
		/** 随机数 **/
		String nonce_str = "";
		/** 签名 **/
		String sign = "";
		/** 签名类型 **/
		String sign_type = "";
		/** 业务结果 **/
		String result_code = "";
		/** 错误代码 **/
		String err_code = "";
		/** 错误代码描述 **/
		String err_code_des = "";
		/** 用户openid **/
		String openid = "";
		/** 是否关注公众账号 **/
		String is_subscribe = "";
		/** 交易类型 **/
		String trade_type = "";
		/** 支付银行 **/
		String bankType = "";
		/** 订单金额 **/
		String total_fee = "0";
		/** 货币种类 **/
		String fee_type = "";
		/** 现金支付金额 **/
		String cash_fee = "0";
		/** 现金支付货币类型 **/
		String cash_fee_type = "";
		/** 微信支付交易号 **/
		String transaction_id = "";
		/** 订单号 **/
		String out_trade_no = "-1";
		/** 商家数据包 **/
		String attach = "";
		/** 支付完成时间 **/
		String time_end = "";

		String backcode = "-1";
		String backMsg = "--";
		Map map = XmlUtil.doXMLParse(notityXml);
		MapUtils mapUtils = new MapUtils(map);

		String return_code = mapUtils.getString("return_code");
		String return_msg = mapUtils.getString("return_msg");
		if ("SUCCESS".equals(return_code.toUpperCase())) {
			appid = mapUtils.getString("appid");
			mch_id = mapUtils.getString("mch_id");
			device_info = mapUtils.getString("device_info");
			nonce_str = mapUtils.getString("nonce_str");
			sign = mapUtils.getString("sign");
			sign_type = mapUtils.getString("sign_type");
			openid = mapUtils.getString("openid");
			is_subscribe = mapUtils.getString("is_subscribe");
			trade_type = mapUtils.getString("trade_type");
			bankType = mapUtils.getString("bankType");
			total_fee = mapUtils.getString("total_fee");
			fee_type = mapUtils.getString("fee_type");
			cash_fee = mapUtils.getString("cash_fee");
			cash_fee_type = mapUtils.getString("cash_fee_type");
			transaction_id = mapUtils.getString("transaction_id");
			out_trade_no = mapUtils.getString("out_trade_no");
			attach = mapUtils.getString("attach");
			time_end = mapUtils.getString("time_end");
			// 业务结果
			result_code = mapUtils.getString("result_code");
			err_code = mapUtils.getString("err_code");
			err_code_des = mapUtils.getString("err_code_des");
		} else {
			code = "-1";
			msg = "通信失败";
		}
		TWxNoticeBean notic = new TWxNoticeBean();
		/** 返回状态码 **/
		notic.setReturnCode(return_code);
		/** 返回信息 **/
		notic.setReturnMsg(return_msg);
		/** 商户订单号 **/
		notic.setOutTradeNo(out_trade_no);
		/** 微信支付订单号 **/
		notic.setTransactionId(transaction_id);
		/** 公众账号ID **/
		notic.setAppid(appid);
		/** 商户账号 **/
		notic.setMchId(mch_id);
		/** 设备账号 **/
		notic.setDeviceInfo(device_info);
		/** 随机字符串 **/
		notic.setNonceStr(nonce_str);
		/** 签名 **/
		notic.setSign(sign);
		/** 签名类型 **/
		notic.setSignType(sign_type);
		/** 业务结果 **/
		notic.setResultCode(result_code);
		/** 错误代码 **/
		notic.setErrCode(err_code);
		/** 错误代码描述 **/
		notic.setErrCodeDes(err_code_des);
		/** 用户标识 **/
		notic.setOpenid(openid);
		/** 是否关注公主账号 **/
		notic.setIsSubscribe(is_subscribe);
		/** 交易类型 **/
		notic.setTradeType(trade_type);
		/** 付款银行 **/
		notic.setBankType(bankType);
		/** 订单金额 **/
		notic.setTotalFee(Integer.valueOf(total_fee));
		/** 货币种类 **/
		notic.setFeeType(fee_type);
		/** 现金支付金额 **/
		notic.setCashFee(Integer.valueOf(cash_fee));
		/** 现金支付货币类型 **/
		notic.setCashFeeType(cash_fee_type);
		/** 商家数据包 **/
		notic.setAttach(attach);
		/** 支付完成时间 **/
		notic.setTimeend(time_end);
		/** 创建时间 **/
		notic.setCreateTime(new Date());
		/** 接收状态 **/
		notic.setBackCode(backcode);
		/** 接收信息 **/
		notic.setBackMsg(backMsg);
		publicPayService.saveNotifyResult(notic);

		// 业务结果成功表明支付成功
		if ("SUCCESS".equals(result_code.toUpperCase())) {
			code = "0";
			msg = "OK";
		} else {
			// 业务失败
			code = err_code;
			msg = err_code_des;
		}
		resultMap.put("code", code);
		resultMap.put("msg", msg);
		return resultMap;
	}

}
