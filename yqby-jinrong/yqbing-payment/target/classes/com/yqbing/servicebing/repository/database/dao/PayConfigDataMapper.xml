<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yqbing.servicebing.repository.database.dao.PayConfigDataMapper" >
  <resultMap id="BaseResultMap" type="com.yqbing.servicebing.repository.database.bean.PayConfigData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="app_id" property="appId" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="appid" property="appid" jdbcType="INTEGER" />
    <result column="secret" property="secret" jdbcType="VARCHAR" />
    <result column="mchId" property="mchid" jdbcType="INTEGER" />
    <result column="partnerkey" property="partnerkey" jdbcType="VARCHAR" />
    <result column="trade_type" property="tradeType" jdbcType="VARCHAR" />
    <result column="body" property="body" jdbcType="VARCHAR" />
    <result column="H5url" property="h5url" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, app_id, url, appid, secret, mchId, partnerkey, trade_type, body, H5url, type, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yqbing.servicebing.repository.database.abstracts.PayConfigDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pay_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByType" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_config
    where type = #{type,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pay_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yqbing.servicebing.repository.database.bean.PayConfigData" >
    insert into pay_config (id, app_id, url, 
      appid, secret, mchId, 
      partnerkey, trade_type, body, 
      H5url, type, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{appId,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, 
      #{appid,jdbcType=INTEGER}, #{secret,jdbcType=VARCHAR}, #{mchid,jdbcType=INTEGER}, 
      #{partnerkey,jdbcType=VARCHAR}, #{tradeType,jdbcType=VARCHAR}, #{body,jdbcType=VARCHAR}, 
      #{h5url,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yqbing.servicebing.repository.database.bean.PayConfigData" >
    insert into pay_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="appId != null" >
        app_id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="appid != null" >
        appid,
      </if>
      <if test="secret != null" >
        secret,
      </if>
      <if test="mchid != null" >
        mchId,
      </if>
      <if test="partnerkey != null" >
        partnerkey,
      </if>
      <if test="tradeType != null" >
        trade_type,
      </if>
      <if test="body != null" >
        body,
      </if>
      <if test="h5url != null" >
        H5url,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="appid != null" >
        #{appid,jdbcType=INTEGER},
      </if>
      <if test="secret != null" >
        #{secret,jdbcType=VARCHAR},
      </if>
      <if test="mchid != null" >
        #{mchid,jdbcType=INTEGER},
      </if>
      <if test="partnerkey != null" >
        #{partnerkey,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null" >
        #{tradeType,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="h5url != null" >
        #{h5url,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yqbing.servicebing.repository.database.abstracts.PayConfigDataExample" resultType="java.lang.Integer" >
    select count(*) from pay_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.yqbing.servicebing.repository.database.bean.PayConfigData" >
    update pay_config
    <set >
      <if test="appId != null" >
        app_id = #{appId,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="appid != null" >
        appid = #{appid,jdbcType=INTEGER},
      </if>
      <if test="secret != null" >
        secret = #{secret,jdbcType=VARCHAR},
      </if>
      <if test="mchid != null" >
        mchId = #{mchid,jdbcType=INTEGER},
      </if>
      <if test="partnerkey != null" >
        partnerkey = #{partnerkey,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null" >
        trade_type = #{tradeType,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="h5url != null" >
        H5url = #{h5url,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yqbing.servicebing.repository.database.bean.PayConfigData" >
    update pay_config
    set app_id = #{appId,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      appid = #{appid,jdbcType=INTEGER},
      secret = #{secret,jdbcType=VARCHAR},
      mchId = #{mchid,jdbcType=INTEGER},
      partnerkey = #{partnerkey,jdbcType=VARCHAR},
      trade_type = #{tradeType,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      H5url = #{h5url,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>