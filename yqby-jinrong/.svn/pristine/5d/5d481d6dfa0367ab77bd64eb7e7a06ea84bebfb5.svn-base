<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-autowire="no" default-lazy-init="false">
	<bean
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="java.net.SocketAddress" value="org.apache.mina.integration.beans.InetSocketAddressEditor" >
				</entry>
			</map>
		</property>
	</bean>
	
	
	
	<bean id="ioAcceptor" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"
        init-method="bind" destroy-method="unbind">
        <!--端口号-->
        <property name="defaultLocalAddress" value=":8833" />
        <!--绑定自己实现的handler-->
        <property name="handler" ref="serverHandler" />
        <!--声明过滤器的集合-->
        <property name="filterChainBuilder" ref="filterChainBuilder" />
        <property name="reuseAddress" value="true" />
    </bean>
    
    <bean id="filterChainBuilder"
        class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
        <property name="filters">
            <map>
                <!--mina自带的线程池filter-->
                <entry key="executor" value-ref="executorFilter" />
                <entry key="mdcInjectionFilter" value-ref="mdcInjectionFilter" />
                <!--自己实现的编解码器filter-->
                <entry key="codecFilter" value-ref="codecFilter" />
                <!--日志的filter-->
                <entry key="loggingFilter" value-ref="loggingFilter" />
                <!--心跳filter-->
                 <!--  <entry key="keepAliveFilter" value-ref="keepAliveFilter" /> -->
            </map>
        </property>
    </bean>
    
     <!-- executorFilter多线程处理 -->  
    <bean id="executorFilter" class="org.apache.mina.filter.executor.ExecutorFilter" />
    <bean id="mdcInjectionFilter" class="org.apache.mina.filter.logging.MdcInjectionFilter">
        <constructor-arg value="remoteAddress" />
    </bean>
    
    <!--日志-->
    <bean id="loggingFilter" class="org.apache.mina.filter.logging.LoggingFilter" />
    
     <!--编解码-->
    <bean id="codecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
        <constructor-arg>
            <!--构造函数的参数传入自己实现的对象-->
            <bean class="com.yqbing.servicebing.mina.server.ByteArrayCodecFactory"></bean>
        </constructor-arg>
    </bean>
    <!--心跳检测filter-->
    <!-- <bean id="keepAliveFilter" class="org.apache.mina.filter.keepalive.KeepAliveFilter">
        构造函数的第一个参数传入自己实现的工厂
        <constructor-arg>
            <bean class="com.hiko.gym.oxygen.mina.server.MyKeepAliveMessageFactory"></bean>
        </constructor-arg>
       第二个参数需要的是IdleStatus对象，value值设置为读写空闲
        <constructor-arg type = "org.apache.mina.core.session.IdleStatus" value="BOTH_IDLE" >
       </constructor-arg>
       心跳频率，不设置则默认60s
        <property name="requestInterval" value="5" />
        心跳超时时间，不设置则默认30s  
        <property name="requestTimeout" value="1" />
        不设置默认false
        <property name="forwardEvent" value="true" />
    </bean>  -->
    <!--自己实现的handler-->
    <bean id="serverHandler" class="com.yqbing.servicebing.mina.server.MyHandler" />
	
	</beans>