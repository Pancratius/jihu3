package com.hiko.gym.common.repository.redis;

import java.text.MessageFormat;

import javax.annotation.Resource;

import org.json.JSONArray;
import org.json.JSONObject;

import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.stereotype.Repository;
/**
 * 跑步机元数据Redis接口实现类
 * 
 * @author cychen
 *
 */
@Repository("rPaoBuJiRawObject")
public class RPaoBuJiRawObjectImpl implements RPaoBuJiRawObject {
	
	/** Redis模板 */
	@Resource(name = "redisTemplate")
	private RedisTemplate<String, String> redisTemplate = null;
	
	/** 键值格式 */
	private static final MessageFormat KEY_FORMAT = new MessageFormat("Object:Gymnasium{0}");
	
	public void set(String deviceNo, JSONObject rawJSON) {
		//处理设备编号
		String[] code = deviceNo.split("_");
		Long gymnasiumNum = Long.parseLong(code[0]);//健身馆编号
		String key = KEY_FORMAT.format(new Object[] {gymnasiumNum});
		redisTemplate.opsForHash().put(key, deviceNo, rawJSON.toString());
	}
	
	@Override
	public JSONObject getRaw(String deviceNo) {
		//处理设备编号
		String[] code = deviceNo.split("_");
		Long gymnasiumNum = Long.parseLong(code[0]);
		String key = KEY_FORMAT.format(new Object[] { gymnasiumNum});
		
		JSONObject json = new JSONObject(redisTemplate.opsForHash().get(key, deviceNo));
		
		return json;
	}
	
	@Override
	public JSONArray getRawList(Long gymnasiumNum) {
		
		String key = KEY_FORMAT.format(new Object[] {gymnasiumNum});
		
		JSONArray objectArray = new JSONArray(redisTemplate.opsForHash().values(key).toString());
		
		return objectArray;
	}

	@Override
	public void delRaw(String deviceNo) {
		//处理设备编号
		String[] code = deviceNo.split("_");
		Long gymnasiumNum = Long.parseLong(code[0]);
		String key = KEY_FORMAT.format(new Object[] { gymnasiumNum});
		
		redisTemplate.opsForHash().delete(key, deviceNo);
	}

	@Override
	public boolean exist(String deviceNo) {
		//处理设备编号
		String[] code = deviceNo.split("_");
		Long gymnasiumNum = Long.parseLong(code[0]);
		String key = KEY_FORMAT.format(new Object[] {gymnasiumNum});

		return redisTemplate.opsForHash().hasKey(key, deviceNo);
	}

	

}
